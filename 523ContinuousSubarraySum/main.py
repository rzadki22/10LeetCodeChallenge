"""
Problem description:

https://leetcode.com/problems/continuous-subarray-sum/

Given a list of non-negative numbers and a target integer k, write a function to check if the array has a continuous subarray of size at least 2 that sums up to a multiple of k, that is, sums up to n*k where n is also an integer.



Example 1:

Input: [23, 2, 4, 6, 7],  k=6
Output: True
Explanation: Because [2, 4] is a continuous subarray of size 2 and sums up to 6.

Example 2:

Input: [23, 2, 6, 4, 7],  k=6
Output: True
Explanation: Because [23, 2, 6, 4, 7] is an continuous subarray of size 5 and sums up to 42.



Constraints:

    The length of the array won't exceed 10,000.
    You may assume the sum of all the numbers is in the range of a signed 32-bit integer.



"""

# 53 / 89 test cases passed. Then: Status: Time Limit Exceeded

class Solution(object):
    def checkSubarraySum(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: bool
        """

        # Boundary condition
        if len(nums) < 2:
            return False

        combinations = []
        for i in range(len(nums)):
            for j in range(len(nums), i + 1, -1):
                combinations.append(nums[i: j])

        try:
            check_divisibility = list(map(lambda x: sum(x) % k == 0, combinations))
        except ZeroDivisionError:
            check_zeros = list(map(lambda x: sum(x) == 0, combinations))
            if any(check_zeros):
                return True
            else:
                return False

        if any(check_divisibility):
            return True
        else:
            return False


if __name__ == "__main__":
    obj = Solution()

    nums = [23, 2, 4, 6, 7]
    k = 6
    assert obj.checkSubarraySum(nums, k) == True

    nums = [23, 2, 6, 4, 7]
    k = 6
    assert obj.checkSubarraySum(nums, k) == True

    nums = [23, 2, 6, 4, 7]
    k = 0
    assert obj.checkSubarraySum(nums, k) == False

    nums = [0, 0]
    k = 0
    assert obj.checkSubarraySum(nums, k) == True

    nums = [0]
    k = 0
    assert obj.checkSubarraySum(nums, k) == False

    nums = [0, 1, 0]
    k = 0
    assert obj.checkSubarraySum(nums, k) == False

    nums = [5, 0, 0]
    k = 0
    assert obj.checkSubarraySum(nums, k) == True

    nums = [495, 235, 134, 119, 221, 315, 488, 208, 287, 339, 51, 59, 54, 454, 260, 437, 401, 188, 91, 426, 299, 211,
            99, 332, 525, 103, 213, 162, 31, 48, 77, 149, 161, 78, 180, 62, 488, 272, 119, 57, 361, 246, 102, 147, 444,
            517, 149, 152, 387, 255, 438, 434, 349, 343, 494, 484, 100, 388, 258, 175, 355, 355, 397, 191, 429, 468,
            310, 441, 449, 360, 284, 235, 398, 286, 283, 170, 165, 364, 338, 166, 19, 348, 309, 370, 199, 370, 345, 223,
            390, 106, 426, 449, 222, 155, 414, 328, 167, 262, 66, 489, 449, 430, 346, 22, 76, 480, 21, 456, 356, 187,
            179, 195, 21, 430, 296, 432, 360, 393, 210, 49, 394, 197, 489, 370, 408, 278, 318, 288, 248, 479, 227, 483,
            463, 461, 220, 125, 359, 429, 372, 168, 291, 76, 292, 466, 204, 392, 5, 494, 394, 284, 360, 419, 424, 7, 60,
            333, 401, 154, 295, 239, 110, 513, 223, 26, 160, 215, 250, 414, 471, 23, 509, 263, 483, 516, 456, 282, 118,
            386, 123, 392, 490, 390, 173, 312, 391, 133, 208, 367, 492, 161, 340, 442, 391, 228, 92, 308, 148, 521, 38,
            65, 80, 309, 333, 245, 255, 140, 24, 486, 480, 379, 362, 26, 184, 122, 341, 328, 63, 309, 143, 241, 30, 211,
            370, 441, 82, 315, 198, 61, 192, 97, 254, 150, 226, 270, 368, 75, 8, 98, 203, 363, 379, 136, 139, 501, 408,
            436, 60, 189, 56, 342, 485, 518, 319, 442, 457, 161, 387, 376, 364, 523, 122, 458, 111, 250, 54, 76, 88, 4,
            29, 334, 347, 148, 106, 472, 174, 229, 467, 455, 99, 42, 449, 380, 13, 120, 39, 193, 93, 277, 499, 280, 508,
            188, 241, 420, 378, 269, 227, 151, 238, 123, 275, 430, 454, 406, 169, 201, 248, 264, 346, 343, 443, 313,
            223, 168, 478, 241, 166, 325, 408, 419, 510, 316, 121, 232, 356, 209, 107, 189, 421, 459, 18, 439, 415, 185,
            46, 401, 370, 270, 140, 97, 24, 343, 152, 428, 183, 218, 246, 204, 345, 263, 346, 441, 252, 485, 370, 282,
            32, 93, 319, 24, 298, 466, 434, 234, 365, 15, 465, 386, 6, 331, 320, 49, 388, 361, 190, 268, 299, 138, 502,
            503, 171, 153, 235, 35, 126, 153, 307, 474, 318, 14, 345, 230, 252, 170, 0, 133, 194, 297, 60, 296, 86, 87,
            480, 480, 325, 20, 300, 255, 165, 78, 84, 61, 174, 446, 36, 4, 520, 44, 66, 6, 214, 387, 164, 398, 189, 328,
            133, 242, 271, 44, 0, 391, 390, 317, 227, 71, 196, 24, 336, 75, 284, 271, 361, 167, 104, 35, 204, 287, 356,
            270, 69, 459, 304, 11, 325, 1, 144, 133, 295, 202, 384, 40, 483, 18, 468, 147, 347, 254, 333, 341, 50, 228,
            470, 424, 436, 501, 177, 192, 464, 61, 239, 280, 450, 491, 419, 74, 297, 405, 117, 129, 150, 492, 149, 164,
            392, 87, 435, 386, 427, 444, 364, 333, 44, 135, 110, 330, 447, 404, 479, 141, 368, 460, 371, 148, 172, 406,
            142, 272, 448, 183, 248, 304, 35, 520, 12, 397, 28, 212, 85, 238, 390, 340, 441, 261, 292, 250, 402, 61,
            487, 424, 319, 95, 373, 87, 438, 79, 234, 471, 505, 76, 112, 129, 281, 418, 510, 220, 170, 405, 239, 14,
            255, 158, 143, 328, 479, 16, 190, 513, 139, 229, 26, 70, 85, 262, 121, 89, 141, 211, 315, 189, 348, 424,
            171, 379, 165, 32, 385, 477, 29, 171, 338, 212, 159, 326, 15, 473, 405, 515, 361, 365, 276, 5, 522, 185,
            394, 221, 315, 101, 118, 257, 118, 191, 72, 497, 303, 312, 242, 197, 206, 88, 58, 310, 299, 43, 472, 237,
            261, 299, 259, 432, 390, 203, 121, 506, 183, 506, 397, 78, 409, 270, 464, 339, 391, 446, 16, 81, 229, 45,
            293, 421, 448, 105, 407, 261, 39, 184, 320, 143, 245, 234, 325, 324, 6, 200, 507, 478, 149, 248, 478, 378,
            54, 163, 128, 298, 226, 257, 280, 379, 523, 106, 350, 446, 159, 155, 340, 253, 442, 163, 366, 121, 195, 188,
            356, 473, 107, 91, 66, 52, 110, 443, 358, 407, 459, 42, 465, 165, 336, 193, 393, 294, 452, 21, 224, 122,
            476, 291, 398, 397, 212, 136, 487, 24, 123, 363, 381, 287, 483, 222, 297, 54, 16, 335, 288, 373, 260, 225,
            187, 17, 316, 271, 268, 316, 467, 438, 421, 382, 468, 452, 87, 256, 356, 124, 505, 84, 486, 499, 57, 362,
            100, 139, 76, 495, 211, 329, 342, 91, 305, 505, 216, 460, 128, 367, 143, 83, 116, 489, 447, 83, 509, 336,
            221, 80, 57, 461, 204, 206, 456, 205, 91, 432, 273, 444, 246, 233, 316, 222, 65, 510, 39, 117, 73, 369, 278,
            191, 483, 104, 480, 95, 501, 89, 227, 338, 4, 324, 298, 133, 373, 391, 273, 165, 471, 180, 88, 172, 399,
            474, 100, 182, 423, 107, 71, 494, 507, 21, 5, 444, 37, 327, 130, 297, 299, 50, 403, 103, 241, 103, 119, 1,
            368, 131, 45, 353, 198, 376, 130, 378, 211, 27, 346, 300, 352, 247, 234, 207, 167, 179, 271, 523, 189, 251,
            30, 110, 65, 348, 519, 302, 499, 439, 223, 101, 485, 67, 235, 48, 236, 47, 451, 325, 169, 137, 237, 15, 438,
            357, 517, 386, 35, 440, 35, 83, 479, 524, 204, 76, 8, 333, 345, 357, 102, 388, 358, 156, 79, 479, 130, 281,
            226, 312, 146, 153, 275, 380, 44, 309, 42, 198, 496, 77, 157, 144, 382, 431, 162, 42, 427, 80, 369, 464,
            175, 64, 153, 277, 137, 81, 445, 166, 171, 424, 275, 57, 434, 12, 493, 356, 21, 320, 209, 511, 124, 76, 248,
            148, 99, 413, 213, 425, 300, 132, 249, 17, 19, 271, 279, 31, 166, 311, 329, 203, 275, 461, 108, 377, 516,
            332, 221, 180, 114, 76, 224, 249, 3, 55, 13, 60, 244, 130, 128, 417, 1, 62]
    k = 274
    assert obj.checkSubarraySum(nums, k) == True






























